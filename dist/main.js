(()=>{"use strict";var t={735:(t,e,o)=>{o.d(e,{Z:()=>d});var n=o(537),i=o.n(n),r=o(645),a=o.n(r)()(i());a.push([t.id,':root {\n    --prio-one: rgba(245, 164, 164, 0.3);\n    --prio-two: rgba(248, 209, 108, 0.3);\n    --prio-three: rgba(240, 240, 240, 1);\n  }\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: Arial, sans-serif;\n    display: flex;\n    flex-direction: column;\n}\n\nli{\n    list-style: none;\n    margin: 10px;\n    cursor: pointer;\n}\n\n.page-body {\n    display: flex;\n}\n\n.header {\n    background-color: #333;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}\n\n.sidebar {\n    flex-shrink: 0;\n    background-color: #f5f5f5;\n    width: 150px;\n    padding: 20px;\n}\n\n.add-new-todo {\n    margin: 30px 20px;\n    width: 50px;\n    height: 50px;\n    flex-shrink: 0;\n    background-color: #f175e0;\n    border-radius: 50%;\n    text-align: center;\n    color: white;\n    font-size: 32px;\n    cursor: pointer;\n    box-shadow: 0 2px 4px rgba(241, 117, 224, 0.2);\n    border-color: #ab339b;\n}\n\n.modal {\n    border: 1px solid grey;\n    background-color: white;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n    width: 400px;\n    z-index: 10;\n    position: fixed;\n    top: 25%;\n    left: 35%;\n    visibility: hidden;\n}\n\n.modal.active {\n    visibility: visible;\n}\n\n#overlay {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    opacity: 0;\n    background-color: rgb(0, 0, 0, .5);\n    pointer-events: none;\n}\n\n#overlay.active {\n    pointer-events: all;\n    opacity: 1;\n}\n\ntextarea {\n\tresize: vertical;\n}\n\n.todo-props {\n    display: grid;\n    align-items: center;\n    grid-template-columns: repeat(2, auto);\n    grid-template-rows: repeat(3, auto);\n    gap: 10px;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n}\n\nform > * {\n    margin: 15px;\n    padding: 3px;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 16px;\n}\n\n*:focus{\n    outline: none;\n}\n\ninput[type="date"], select {\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 16px; \n}\n\n.form-buttons{\n    display: flex;\n    justify-content: space-around;\n}\n\n.form-buttons > button {\n    cursor: pointer;\n    border-radius: 10px;\n    border-color: grey;\n    padding: 10px;\n    width: 45%;\n\n}\n\n#submit-todo, #save-todo {\n    background-color: rgb(241, 117, 224);\n    color: white;\n}\n\n.todo-list {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    flex-grow: 1;\n    margin: 20px;\n}\n\n.item-card {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: var(--prio-three);\n    padding: 10px;\n    margin: 10px;\n    width: calc(100% - 40px);\n}\n\n.todo-title {\n    cursor: text;\n    font-weight: bold;\n    margin: 10px 10px;\n}\n\n.todo-details {\n    cursor: text;\n    margin: 10px 20px;\n}\n\ndiv[contenteditable="true"]:focus{\n    border: 2px solid #e5e5e5; /* Light grey border */\n    background-color: #fff; /* White background color */\n    box-shadow: 0 0 5px rgba(255, 105, 180, 0.7); /* Pink shadow with transparency */\n    outline: none; /* Remove the default focus outline */\n  \n    /* Text color */\n    color: #333; /* Dark grey text color */\n  \n    /* Caret color (cursor color) */\n    caret-color: #ff69b4; /* Pink caret color */\n}\n\n.todo-due, .todo-prio {\n    margin: 10px 20px;\n}\n\n.todo-edit, .todo-delete {\n    cursor: pointer;\n    background-color: #e0e0e0;\n    border: none;\n    border-radius: 4px;\n    padding: 5px 10px;\n    margin: 10px 5px;\n}\n\n.todo-edit:hover, .todo-delete:hover {\n    background-color: #d0d0d0;\n}\n\n.todo-done *:not(button){\n    text-decoration: line-through;\n    color: grey;\n}\n\n/* .sidebar .new-category {\n    display: none;\n} */',"",{version:3,sources:["webpack://./src/styling.css"],names:[],mappings:"AAAA;IACI,oCAAoC;IACpC,oCAAoC;IACpC,oCAAoC;EACtC;;AAEF;IACI,SAAS;IACT,UAAU;IACV,8BAA8B;IAC9B,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,yBAAyB;IACzB,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,WAAW;IACX,YAAY;IACZ,cAAc;IACd,yBAAyB;IACzB,kBAAkB;IAClB,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,eAAe;IACf,8CAA8C;IAC9C,qBAAqB;AACzB;;AAEA;IACI,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,yCAAyC;IACzC,YAAY;IACZ,WAAW;IACX,eAAe;IACf,QAAQ;IACR,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,MAAM;IACN,SAAS;IACT,OAAO;IACP,QAAQ;IACR,UAAU;IACV,kCAAkC;IAClC,oBAAoB;AACxB;;AAEA;IACI,mBAAmB;IACnB,UAAU;AACd;;AAEA;CACC,gBAAgB;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sCAAsC;IACtC,mCAAmC;IACnC,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,yCAAyC;IACzC,eAAe;AACnB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,yCAAyC;IACzC,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,6BAA6B;AACjC;;AAEA;IACI,eAAe;IACf,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;IACb,UAAU;;AAEd;;AAEA;IACI,oCAAoC;IACpC,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,kBAAkB;IAClB,mCAAmC;IACnC,aAAa;IACb,YAAY;IACZ,wBAAwB;AAC5B;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,yBAAyB,EAAE,sBAAsB;IACjD,sBAAsB,EAAE,2BAA2B;IACnD,4CAA4C,EAAE,kCAAkC;IAChF,aAAa,EAAE,qCAAqC;;IAEpD,eAAe;IACf,WAAW,EAAE,yBAAyB;;IAEtC,+BAA+B;IAC/B,oBAAoB,EAAE,qBAAqB;AAC/C;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,6BAA6B;IAC7B,WAAW;AACf;;AAEA;;GAEG",sourcesContent:[':root {\n    --prio-one: rgba(245, 164, 164, 0.3);\n    --prio-two: rgba(248, 209, 108, 0.3);\n    --prio-three: rgba(240, 240, 240, 1);\n  }\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: Arial, sans-serif;\n    display: flex;\n    flex-direction: column;\n}\n\nli{\n    list-style: none;\n    margin: 10px;\n    cursor: pointer;\n}\n\n.page-body {\n    display: flex;\n}\n\n.header {\n    background-color: #333;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}\n\n.sidebar {\n    flex-shrink: 0;\n    background-color: #f5f5f5;\n    width: 150px;\n    padding: 20px;\n}\n\n.add-new-todo {\n    margin: 30px 20px;\n    width: 50px;\n    height: 50px;\n    flex-shrink: 0;\n    background-color: #f175e0;\n    border-radius: 50%;\n    text-align: center;\n    color: white;\n    font-size: 32px;\n    cursor: pointer;\n    box-shadow: 0 2px 4px rgba(241, 117, 224, 0.2);\n    border-color: #ab339b;\n}\n\n.modal {\n    border: 1px solid grey;\n    background-color: white;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n    width: 400px;\n    z-index: 10;\n    position: fixed;\n    top: 25%;\n    left: 35%;\n    visibility: hidden;\n}\n\n.modal.active {\n    visibility: visible;\n}\n\n#overlay {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    opacity: 0;\n    background-color: rgb(0, 0, 0, .5);\n    pointer-events: none;\n}\n\n#overlay.active {\n    pointer-events: all;\n    opacity: 1;\n}\n\ntextarea {\n\tresize: vertical;\n}\n\n.todo-props {\n    display: grid;\n    align-items: center;\n    grid-template-columns: repeat(2, auto);\n    grid-template-rows: repeat(3, auto);\n    gap: 10px;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n}\n\nform > * {\n    margin: 15px;\n    padding: 3px;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 16px;\n}\n\n*:focus{\n    outline: none;\n}\n\ninput[type="date"], select {\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 16px; \n}\n\n.form-buttons{\n    display: flex;\n    justify-content: space-around;\n}\n\n.form-buttons > button {\n    cursor: pointer;\n    border-radius: 10px;\n    border-color: grey;\n    padding: 10px;\n    width: 45%;\n\n}\n\n#submit-todo, #save-todo {\n    background-color: rgb(241, 117, 224);\n    color: white;\n}\n\n.todo-list {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    flex-grow: 1;\n    margin: 20px;\n}\n\n.item-card {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: var(--prio-three);\n    padding: 10px;\n    margin: 10px;\n    width: calc(100% - 40px);\n}\n\n.todo-title {\n    cursor: text;\n    font-weight: bold;\n    margin: 10px 10px;\n}\n\n.todo-details {\n    cursor: text;\n    margin: 10px 20px;\n}\n\ndiv[contenteditable="true"]:focus{\n    border: 2px solid #e5e5e5; /* Light grey border */\n    background-color: #fff; /* White background color */\n    box-shadow: 0 0 5px rgba(255, 105, 180, 0.7); /* Pink shadow with transparency */\n    outline: none; /* Remove the default focus outline */\n  \n    /* Text color */\n    color: #333; /* Dark grey text color */\n  \n    /* Caret color (cursor color) */\n    caret-color: #ff69b4; /* Pink caret color */\n}\n\n.todo-due, .todo-prio {\n    margin: 10px 20px;\n}\n\n.todo-edit, .todo-delete {\n    cursor: pointer;\n    background-color: #e0e0e0;\n    border: none;\n    border-radius: 4px;\n    padding: 5px 10px;\n    margin: 10px 5px;\n}\n\n.todo-edit:hover, .todo-delete:hover {\n    background-color: #d0d0d0;\n}\n\n.todo-done *:not(button){\n    text-decoration: line-through;\n    color: grey;\n}\n\n/* .sidebar .new-category {\n    display: none;\n} */'],sourceRoot:""}]);const d=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var o="",n=void 0!==e[5];return e[4]&&(o+="@supports (".concat(e[4],") {")),e[2]&&(o+="@media ".concat(e[2]," {")),n&&(o+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),o+=t(e),n&&(o+="}"),e[2]&&(o+="}"),e[4]&&(o+="}"),o})).join("")},e.i=function(t,o,n,i,r){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(n)for(var d=0;d<this.length;d++){var s=this[d][0];null!=s&&(a[s]=!0)}for(var A=0;A<t.length;A++){var c=[].concat(t[A]);n&&a[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),o&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=o):c[2]=o),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},537:t=>{t.exports=function(t){var e=t[1],o=t[3];if(!o)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),r="/*# ".concat(i," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function o(t){for(var o=-1,n=0;n<e.length;n++)if(e[n].identifier===t){o=n;break}return o}function n(t,n){for(var r={},a=[],d=0;d<t.length;d++){var s=t[d],A=n.base?s[0]+n.base:s[0],c=r[A]||0,l="".concat(A," ").concat(c);r[A]=c+1;var u=o(l),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var h=i(p,n);n.byIndex=d,e.splice(d,0,{identifier:l,updater:h,references:1})}a.push(l)}return a}function i(t,e){var o=e.domAPI(e);return o.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;o.update(t=e)}else o.remove()}}t.exports=function(t,i){var r=n(t=t||[],i=i||{});return function(t){t=t||[];for(var a=0;a<r.length;a++){var d=o(r[a]);e[d].references--}for(var s=n(t,i),A=0;A<r.length;A++){var c=o(r[A]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}r=s}}},569:t=>{var e={};t.exports=function(t,o){var n=function(t){if(void 0===e[t]){var o=document.querySelector(t);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(t){o=null}e[t]=o}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(o)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,o)=>{t.exports=function(t){var e=o.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(o){!function(t,e,o){var n="";o.supports&&(n+="@supports (".concat(o.supports,") {")),o.media&&(n+="@media ".concat(o.media," {"));var i=void 0!==o.layer;i&&(n+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),n+=o.css,i&&(n+="}"),o.media&&(n+="}"),o.supports&&(n+="}");var r=o.sourceMap;r&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,o)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function o(n){var i=e[n];if(void 0!==i)return i.exports;var r=e[n]={id:n,exports:{}};return t[n](r,r.exports,o),r.exports}o.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.nc=void 0,(()=>{var t=o(379),e=o.n(t),n=o(795),i=o.n(n),r=o(569),a=o.n(r),d=o(565),s=o.n(d),A=o(216),c=o.n(A),l=o(589),u=o.n(l),p=o(735),h={};h.styleTagTransform=u(),h.setAttributes=s(),h.insert=a().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=c(),e()(p.Z,h),p.Z&&p.Z.locals&&p.Z.locals;class C{constructor(t,e,o,n,i,r){this.id=t,this.title=e,this.details=o,this.duedate=n,this.priority=i,this.category="To Do",this.isDone=!1}}class g{constructor(){this.todoList=[],this.id=1,this.owner="Emma"}createTodo(t,e,o,n,i){return this.todoList.push(new C(this.id,t,e,o,n,i)),this.id++,this.todoList}updateTodo(t,e,o,n,i,r){return this.objectToUpdate=this.todoList.find((e=>e.id==t)),this.objectToUpdate.title=e,this.objectToUpdate.details=o,this.objectToUpdate.duedate=n,this.objectToUpdate.priority=i,this.objectToUpdate.category=r,this.todoList}deleteTodo(t){return this.todoList=this.todoList.filter((e=>e.id!==t)),this.todoList}getTodo(t){return this.todoList.find((e=>e.id==t))}}class m{constructor(t,e){this.id=t,this.title=e}}class y{constructor(){this.categoryList=[{id:0,title:"To Do"}],this.id=1}createCategory(t){return this.categoryList.push(new m(this.id,t)),this.id++,this.categoryList}updateCategory(t,e,o){return this.categoryList.map((n=>{n.id==t&&(n[e]=o)})),this.categoryList}deleteCategory(t){return this.categoryList=this.categoryList.filter((e=>e.id!==t)),this.categoryList}}class f{constructor(){this.categoryListInstance=new y,this.categoryList=document.getElementById("category-list"),this.newCategory=document.getElementById("new-category"),this.addCategoryButton=document.getElementById("add-category"),this.addCategoryButton.addEventListener("click",(()=>{this.addNewCategory(this.newCategory.value),this.newCategory.value="",this.renderSidebar(),console.log(this.categoryListInstance.categoryList)})),this.renderSidebar()}addNewCategory(t){this.categoryListInstance.createCategory(t)}renderSidebar(){this.categoryList.innerText="",this.categoryListInstance.categoryList.forEach((t=>{this.categoryName=document.createElement("li"),this.categoryName.innerText=t.title,this.categoryName.setAttribute("data-categoryid",t.id),this.categoryList.appendChild(this.categoryName)}))}}class b{constructor(){this.availableCategories=new f,this.modal=document.getElementById("modal"),this.overlay=document.getElementById("overlay"),this.submitNewTodo=document.getElementById("submit-todo"),this.cancel=document.getElementById("cancel"),this.todoForm=document.getElementById("todo-form"),this.todoTitle=document.getElementById("title"),this.todoDetails=document.getElementById("description"),this.todoDueDate=document.getElementById("due-date"),this.todoPriority=document.getElementById("prio"),this.todoCategories=document.getElementById("category")}populate(t){this.todoTitle.value=t.title,this.todoDetails.value=t.details,this.todoDueDate.value=t.duedate,this.todoPriority.value=t.priority,this.todoCategories.value=t.category,this.submitNewTodo.innerText="Save",this.submitNewTodo.id="save-todo"}submit(t){t.createTodo(this.todoTitle.value,this.todoDetails.value,this.todoDueDate.value,this.todoPriority.value,this.todoCategories.value),this.close()}save(t,e){t.updateTodo(e,this.todoTitle.value,this.todoDetails.value,this.todoDueDate.value,this.todoPriority.value,this.todoCategories.value),this.close()}open(){this.modal.classList.add("active"),this.overlay.classList.add("active"),this.getCategories(),console.log(this.availableCategories.categoryListInstance.categoryList)}close(){this.todoForm.reset(),this.modal.classList.remove("active"),this.overlay.classList.remove("active")}getCategories(){this.todoCategories.innerHTML="",this.availableCategories.categoryListInstance.categoryList.forEach((t=>{this.availableCategory=document.createElement("option"),this.availableCategory.innerText=t.title,this.todoCategories.appendChild(this.availableCategory)}))}}new g,new class{constructor(){this.todoListInstance=new g,this.modal=new b,this.todoList=document.getElementById("todo-list"),this.addNewTodo=document.getElementById("add-new-todo"),this.addNewTodo.addEventListener("click",(()=>{this.modal.open(),this.modal.submitNewTodo.innerText="Add",this.modal.submitNewTodo.id="submit-todo"})),this.modal.todoForm.addEventListener("click",(t=>{"button"==t.target.type&&("cancel"==t.target.id?this.modal.close():"submit-todo"==t.target.id?(this.modal.submit(this.todoListInstance),this.renderDashboard()):"save-todo"==t.target.id&&(this.modal.save(this.todoListInstance,this.objectToUpdate.id),this.renderDashboard()))}))}createCard(t){return this.todoCard=document.createElement("div"),this.todoCardStatus=document.createElement("input"),this.todoCardTitle=document.createElement("div"),this.todoCardDetails=document.createElement("div"),this.todoCardDueDate=document.createElement("div"),this.todoCardPrio=document.createElement("div"),this.todoCardCategory=document.createElement("div"),this.todoCardEditButton=document.createElement("button"),this.todoCardEditButton.addEventListener("click",(t=>{this.triggerEdit(t)})),this.todoCardDeleteButton=document.createElement("button"),this.todoCardDeleteButton.addEventListener("click",(t=>{this.deleteCard(t)})),this.todoList.appendChild(this.todoCard),this.todoCard.append(this.todoCardStatus,this.todoCardTitle,this.todoCardDetails,this.todoCardDueDate,this.todoCardPrio,this.todoCardCategory,this.todoCardEditButton,this.todoCardDeleteButton),this.todoCard.classList.add("item-card"),this.todoCard.setAttribute("data-itemid",t.id),this.todoCardStatus.type="checkbox",this.todoCardStatus.addEventListener("click",(t=>{this.markDone(t)})),this.todoCardTitle.classList.add("todo-title"),this.todoCardTitle.innerText=t.title,this.todoCardDetails.classList.add("todo-details"),this.todoCardDetails.innerText=t.details,this.todoCardDueDate.classList.add("todo-due"),this.todoCardDueDate.innerText="Due date: "+t.duedate,this.todoCardPrio.classList.add("todo-prio"),this.todoCardPrio.innerText="Priority: "+t.priority,this.todoCardCategory.classList.add("todo-cat"),this.todoCardCategory.innerText="Category: "+t.category,this.todoCardEditButton.classList.add("todo-edit"),this.todoCardEditButton.innerText="Edit",this.todoCardDeleteButton.classList.add("todo-delete"),this.todoCardDeleteButton.innerText="Delete",this.todoCard}deleteCard(t){if("todo-delete"==t.target.className){const e=t.target.closest(".item-card"),o=e.dataset.itemid;this.objectToUpdate=this.todoListInstance.getTodo(o),this.todoList.removeChild(e),this.todoListInstance.deleteTodo(this.objectToUpdate.id)}this.renderDashboard()}triggerEdit(t){if(this.modal.open(),"todo-edit"==t.target.className){const e=t.target.closest(".item-card").dataset.itemid;this.objectToUpdate=this.todoListInstance.getTodo(e),this.modal.populate(this.objectToUpdate)}}renderDashboard(){this.todoList.innerHTML="",this.todoListInstance.todoList.forEach((t=>{this.todoCard=this.createCard(t),this.todoList.appendChild(this.todoCard)}))}markDone(t){if("checkbox"==t.target.type){const e=t.target.closest(".item-card");e.dataset.itemid,e.classList.toggle("todo-done",t.target.checked)}}}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,